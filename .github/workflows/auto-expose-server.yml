name: SQL Automation on Windows with PowerShell

on:
  workflow_dispatch:
    inputs:
      sql_script:
        description: "Path to the SQL script to run"
        required: true
        default: "./scripts/setup-database.sql"

jobs:
  deploy:
    runs-on: windows-latest  # Windows runner for PowerShell compatibility

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start Pinggy Tunnel via PowerShell
        run: |
          Start-Process -NoNewWindow -FilePath "powershell.exe" -ArgumentList "-Command", "${{ secrets.PINGGY_SSH }} | Out-File pinggy_output.txt"
          Start-Sleep -Seconds 5  # Wait for Pinggy to initialize

      - name: Extract Pinggy Port
        run: |
          $port = Select-String -Path "pinggy_output.txt" -Pattern 'localhost:(\d+)' | ForEach-Object { $_.Matches.Groups[1].Value }
          echo "PINGGY_PORT=$port" | Out-File -Append -FilePath $env:GITHUB_ENV

      - name: Install SQLCMD Tools
        run: |
          Invoke-WebRequest -Uri "https://aka.ms/getdbcodbc" -OutFile "msodbcsql.msi"
          Start-Process msiexec.exe -ArgumentList "/i msodbcsql.msi /quiet /norestart" -Wait
          Invoke-WebRequest -Uri "https://aka.ms/getsqlcmd" -OutFile "sqlcmd.msi"
          Start-Process msiexec.exe -ArgumentList "/i sqlcmd.msi /quiet /norestart" -Wait

      - name: Run SQL Script
        run: |
          & "C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\sqlcmd.exe" `
          -S "localhost,${{ env.PINGGY_PORT }}" `
          -U ${{ secrets.SQL_USER }} -P ${{ secrets.SQL_PASSWORD }} `
          -i "${{ inputs.sql_script }}"
