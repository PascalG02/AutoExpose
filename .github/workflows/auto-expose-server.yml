name: Execute SQL Server Script from Repository

on:
  workflow_dispatch:
    inputs:
      sql_file_path:
        description: 'Path to SQL file in repository'
        required: true
        default: 'TestQuery.sql'

env:
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}

jobs:
  execute-sql:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install ngrok and dependencies
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok jq curl
        
    - name: Authenticate ngrok
      run: ngrok authtoken $NGROK_AUTH_TOKEN
      
    - name: Start ngrok tunnel
      run: |
        nohup ngrok http 3000 --log=stdout > ngrok.log &
        sleep 5  # Wait for ngrok to initialize
        
    - name: Get ngrok URL
      id: ngrok
      run: |
        NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "NGROK_URL=${NGROK_URL}" >> $GITHUB_OUTPUT
        echo "Public URL: ${NGROK_URL}"
        
    - name: Execute SQL script file
      run: |
        # Basic auth for security
        AUTH=$(echo -n "$SERVER_USERNAME:$SERVER_PASSWORD" | base64)
        
        # Send the SQL file to your local server
        RESPONSE=$(curl -s -X POST \
          "${{ steps.ngrok.outputs.NGROK_URL }}/execute-sql-file" \
          -H "Authorization: Basic $AUTH" \
          -F "sqlFile=@${{ github.event.inputs.sql_file_path }}")
        
        echo "Execution results:"
        echo $RESPONSE | jq .
        
        # Fail the job if any command failed
        if [ $(echo $RESPONSE | jq '.success') != 'true' ]; then
          echo "SQL execution failed"
          exit 1
        fi
        
        # Check individual command results
        FAILED_COMMANDS=$(echo $RESPONSE | jq '.results[] | select(.error)')
        if [ "$FAILED_COMMANDS" != "" ]; then
          echo "Some SQL commands failed:"
          echo $FAILED_COMMANDS
          exit 1
        fi
