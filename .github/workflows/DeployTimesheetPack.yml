#LAPTOP-H6CGEPKT
name: SSIS Deployment (Personal Runner)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    environment: local-dev
    
    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Debug: Show directory structure
      - name: List project files
        run: dir /s "%GITHUB_WORKSPACE%"
        shell: cmd

      # Install SSIS DevOps tools
      - name: Setup SSIS DevOps Tools
        id: ssis-tools
        uses: jonlabelle/setup-ssis-devops-tools@v1

      # Verify tools installation
      - name: Verify SSIS Tools Installation
        run: |
          echo "Tools path: %{{ steps.ssis-tools.outputs.ssis_tools_path }}%"
          dir "%{{ steps.ssis-tools.outputs.ssis_tools_path }}%"
          if not exist "%{{ steps.ssis-tools.outputs.ssis_tools_path }}%\SSISBuild.exe" (
            echo "::error::SSIS tools not installed properly!"
            exit /b 1
          )
        shell: cmd

      # Verify SSIS project exists
      - name: Validate SSIS project
        run: |
          if not exist "%GITHUB_WORKSPACE%\Timesheet\TimesheetMigrationV2.dtproj" (
            echo "::error::SSIS project file not found!"
            exit /b 1
          )
        shell: cmd

      # Build the SSIS project
      - name: Build SSIS Package
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          echo Building with SSISBuild from %{{ steps.ssis-tools.outputs.ssis_tools_path }}%
          
          "%{{ steps.ssis-tools.outputs.ssis_tools_path }}%\SSISBuild.exe" ^
            -p:Timesheet\TimesheetMigrationV2.dtproj ^
            -o:build ^
            -c:Release ^
            -l:build.log -v:diag
          
          if not exist "Timesheet\build\Release\TimesheetMigrationV2.ispac" (
            echo ::error::Build failed - ISPAC file not generated
            type build.log
            exit /b 1
          )
          echo Build successful
        shell: cmd

      # Deploy using Windows Auth to local SQL Server
      - name: Deploy to Local SQL Server
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          echo Deploying with Windows Authentication to local SQL Server
          echo Using SSISDeploy from %{{ steps.ssis-tools.outputs.ssis_tools_path }}%
          
          "%{{ steps.ssis-tools.outputs.ssis_tools_path }}%\SSISDeploy.exe" ^
            -s:Timesheet\build\Release\TimesheetMigrationV2.ispac ^
            -d:CATALOG;/SSISDB/TimesheetMigrationPacks/TimesheetMigrationV2;LAPTOP-H6CGEPKT ^
            -authType:WIN ^
            -l:deploy.log -v:diag
          
          if %ERRORLEVEL% neq 0 (
            echo ::error::Deployment failed!
            type deploy.log
            exit /b 1
          )
          echo Deployment successful
        shell: cmd

      # Verify deployment
      - name: Verify Deployment
        run: |
          sqlcmd -S LAPTOP-H6CGEPKT -E -Q "SELECT name, created_time FROM SSISDB.catalog.projects WHERE name = 'TimesheetMigrationV2'"
          if %ERRORLEVEL% neq 0 (
            echo ::error::Deployment verification failed!
            exit /b 1
          )
        shell: cmd

      # Upload artifacts for debugging
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ssis-deployment-artifacts
          path: |
            %GITHUB_WORKSPACE%\Timesheet\build\Release\TimesheetMigrationV2.ispac
            %GITHUB_WORKSPACE%\build.log
            %GITHUB_WORKSPACE%\deploy.log
