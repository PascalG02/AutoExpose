name: Deploy SSIS Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install SSIS DevOps Tools using Windows PowerShell
      - name: Setup SSIS DevOps Tools
        run: |
          $toolsPath = Join-Path -Path $env:USERPROFILE -ChildPath "ssis-tools"
          if (-not (Test-Path $toolsPath)) {
              New-Item -ItemType Directory -Path $toolsPath -Force
          }
          
          # Download SSISBuild.exe (example URL - replace with real one)
          $ssisBuildUrl = "https://github.com/jonlabelle/SsisBuild/releases/download/v1.0.0/SSISBuild.exe"
          Invoke-WebRequest -Uri $ssisBuildUrl -OutFile "$toolsPath\SSISBuild.exe"
          
          # Add to PATH
          $env:PATH = "$toolsPath;$env:PATH"
          [System.Environment]::SetEnvironmentVariable("PATH", "$toolsPath;$env:PATH", "Machine")
          
          Write-Output "SSIS tools installed to $toolsPath"
        shell: powershell  # Uses Windows PowerShell instead of pwsh

      # Rest of your workflow remains the same
      - name: Build SSIS Project
        run: |
          SSISBuild.exe -p:Timesheet\TimesheetMigrationV2.dtproj -o:build\Development -ss -l:INFO;build.log
        shell: cmd

      - name: Deploy SSIS Package
        run: |
          SSISDeploy.exe -s:build\Development\TimesheetMigrationV2.ispac `
                         -d:"CATALOG;/SSISDB/TimesheetMigrationPacks/TimesheetMigrationV2;${{ secrets.DEV_SQL_SERVER_URL }}" `
                         -authType:WIN `
                         -l:INFO;deploy.log
        shell: powershell
