name: SSIS Deployment (Personal Runner)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    environment: local-dev
    
    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Debug: Show directory structure
      - name: List project files
        run: dir "${{ github.workspace }}" /s
        shell: cmd

      # Verify SSIS project exists
      - name: Validate SSIS project
        run: |
          if not exist "${{ github.workspace }}\Timesheet\TimesheetMigrationV2.dtproj" (
            echo "::error::SSIS project file not found!"
            exit 1
          )
        shell: cmd

      # Install SSIS DevOps tools
      - name: Setup SSIS DevOps Tools
        uses: jonlabelle/setup-ssis-devops-tools@v1

      # Build the SSIS project
      - name: Build SSIS Package
        run: |
          cd "${{ github.workspace }}"
          SSISBuild.exe -p:Timesheet\TimesheetMigrationV2.dtproj -o:build -c:Release -l:build.log
          
          if not exist "Timesheet\build\Release\TimesheetMigrationV2.ispac" (
            echo "::error::Build failed - ISPAC file not generated"
            type build.log
            exit 1
          )
        shell: cmd

      # Deploy using Windows Auth to local SQL Server
      - name: Deploy to Local SQL Server
        run: |
          cd "${{ github.workspace }}"
          echo "Deploying with Windows Authentication to local SQL Server"
          
          SSISDeploy.exe -s:Timesheet\build\Release\TimesheetMigrationV2.ispac `
                        -d:CATALOG;/SSISDB/TimesheetMigrationPacks/TimesheetMigrationV2;LAPTOP-H6CGEPKT `
                        -authType:WIN `
                        -l:deploy.log
          
          if %ERRORLEVEL% neq 0 (
            echo "::error::Deployment failed!"
            type deploy.log
            exit 1
          )
          echo "Deployment successful"
        shell: cmd

      # Optional: Verify deployment
      - name: Verify Deployment
        run: |
          sqlcmd -S localhost -E -Q "SELECT name, created_time FROM SSISDB.catalog.projects WHERE name = 'TimesheetMigrationV2'"
        shell: cmd

      # Upload artifacts for debugging
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ssis-deployment-artifacts
          path: |
            ${{ github.workspace }}\Timesheet\build\Release\TimesheetMigrationV2.ispac
            ${{ github.workspace }}\build.log
            ${{ github.workspace }}\deploy.log
