name: Manual SQL Deployment

on:
  workflow_dispatch:
    inputs:
      sql_script:
        description: 'Path to the SQL script'
        required: true
        type: string

jobs:
  setup-sqlcmd:
    runs-on: ubuntu-latest
    steps:
      - name: Cache sqlcmd
        id: cache-sqlcmd
        uses: actions/cache@v3
        with:
          path: |
            /opt/mssql-tools/
            /etc/apt/sources.list.d/msprod.list
            /usr/lib/libmsodbcsql-*
          key: sqlcmd-ubuntu-20.04-${{ hashFiles('**/setup-sqlcmd') }}
      - name: Install sqlcmd
        if: steps.cache-sqlcmd.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev

  checkout-repo:
    runs-on: ubuntu-latest
    needs: setup-sqlcmd
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore sqlcmd cache
        uses: actions/cache@v3
        with:
          path: |
            /opt/mssql-tools/
            /etc/apt/sources.list.d/msprod.list
            /usr/lib/libmsodbcsql-*
          key: sqlcmd-ubuntu-20.04-${{ hashFiles('**/setup-sqlcmd') }}
      - name: Set up sqlcmd environment
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc-dev
          echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

  execute-sql:
    runs-on: ubuntu-latest
    needs: checkout-repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore sqlcmd cache
        uses: actions/cache@v3
        with:
          path: |
            /opt/mssql-tools/
            /etc/apt/sources.list.d/msprod.list
            /usr/lib/libmsodbcsql-*
          key: sqlcmd-ubuntu-20.04-${{ hashFiles('**/setup-sqlcmd') }}
      - name: Set up sqlcmd environment
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc-dev
          echo "/opt/mssql-tools/bin" >> $GITHUB_PATH
      - name: Execute SQL Script
        env:
          SQL_SERVER_URL: ${{ secrets.SQL_SERVER_URL }}  # e.g., tcp.pinggy.io:12345
          SQL_USERNAME:   ${{ secrets.SQL_USER }}        # SQL Server username
          SQL_PASSWORD:   ${{ secrets.SQL_PASSWORD }}    # SQL Server password
        run: |
          sqlcmd -S "$SQL_SERVER_URL" -U "$SQL_USERNAME" -P "$SQL_PASSWORD" -d master -i "${{ github.event.inputs.sql_script }}" -b
